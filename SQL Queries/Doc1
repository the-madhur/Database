MySQL Queries Explained with FILMSDATABASE Example
1. Creating a Database

CREATE DATABASE FILMSDATABASE;
This command creates a new database named FILMSDATABASE.

A database is a collection of tables used to store structured data.


SHOW DATABASES;
This command displays a list of all databases present in MySQL.

2. Dropping (Deleting) a Database

DROP DATABASE FILMSDATABASE;
This command permanently deletes the FILMSDATABASE along with all its tables and data.

Use this with caution, as deleted data cannot be recovered.

3. Using a Database

USE FILMSDATABASE;
This command switches to the specified database, so you can create tables and insert data into it.

4. Creating a Table

CREATE TABLE Movies (Name VARCHAR(50), Rating INTEGER);
Creates a table named Movies inside FILMSDATABASE.

It has two columns:

Name (Stores movie names, up to 50 characters)

Rating (Stores an integer value for the movie rating)


SHOW TABLES;
Lists all tables inside the currently selected database.


DESC movies;
Displays the structure of the Movies table, showing column names, data types, and constraints.

5. Inserting Data into a Table

INSERT INTO Movies (Name, Rating) VALUES ("Thor", 5);
Adds a new row with:

Name: "Thor"

Rating: 5


INSERT INTO Movies (Name, Rating) 
VALUES ("Thor", 5), ("Iron Man", 5), ("Avengers", 4), ("Thor the dark world", 3);
Inserts multiple rows into the Movies table in a single query.

6. Retrieving Data from a Table

SELECT * FROM Movies;
Retrieves all records from the Movies table.


SELECT * FROM Movies WHERE Rating = 4;
Fetches movies that have a rating of 4.


SELECT * FROM Movies WHERE Rating = 4 OR Rating < 4;
Fetches movies with a rating of 4 or lower.


SELECT * FROM Movies WHERE Name = "Thor";
Fetches records where the movie name is "Thor".

7. Deleting Data from a Table

DELETE FROM Movies WHERE Name = "Thor";
Deletes all rows where the movie name is "Thor".

8. Updating Data in a Table

UPDATE Movies SET Rating = 2 WHERE Name = "Thor the dark world";
Updates the Rating of "Thor the dark world" to 2.


UPDATE Movies SET Rating = 3 WHERE Name = "Thor the dark world";
Updates the Rating back to 3.

Common Errors & Fixes
1. Table Doesnâ€™t Exist Error

DESC filmsdatabase;
Error:


ERROR 1146 (42S02): Table 'filmsdatabase.filmsdatabase' doesn't exist
Fix:

DESC is used for tables, not databases. Use:


DESC Movies;
2. String Value Not Quoted Error

SELECT * FROM Movies WHERE Name = Thor;
Error:


ERROR 1054 (42S22): Unknown column 'Thor' in 'where clause'
Fix:

Strings must be enclosed in quotes:

sql
Copy
Edit
SELECT * FROM Movies WHERE Name = "Thor";
3. Trying to Use a Table as a Database
sql
Copy
Edit
USE movies;
Error:

pgsql
Copy
Edit
ERROR 1049 (42000): Unknown database 'movies'
Fix:

"movies" is a table, not a database. Use:

sql
Copy
Edit
USE FILMSDATABASE;
Final Output After All Queries
After running all queries, the Movies table contains:

Name	Rating
Iron Man	5
Avengers	4
Thor the dark world	3
Thor Ragnarok	5
